name: goreleaser

on:
  push:
    tags:
      - '*'

jobs:
  goreleaser:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
      - name: Derive release suffix from tag (if it exists)
        run: |
          # Extract suffix from tag name (e.g., 'dencun' from 'v1.0.0-dencun')
          RELEASE_SUFFIX=${GITHUB_REF#refs/tags/v*}

          # Default to empty string if no suffix was found
          if [[ -z "$RELEASE_SUFFIX" ]]; then
            RELEASE_SUFFIX=""
          fi

          echo "RELEASE_SUFFIX=$RELEASE_SUFFIX" >> $GITHUB_ENV

          echo "Release suffix: $RELEASE_SUFFIX"
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - name: Install cross-compiler for linux/arm64
        run: sudo apt-get -y install gcc-aarch64-linux-gnu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Context for Buildx
        shell: bash
        id: buildx-context
        run: |
          docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          endpoint: builders
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Update GoReleaser config
        run: |
          # If we have a valid RELEASE_SUFFIX, update the goreleaser config to not set
          # the release as the latest
          if [[ -n "$RELEASE_SUFFIX" ]]; then
            echo "release:" >> .goreleaser.yml
            echo "  prerelease: true" >> .goreleaser.yml
            echo "  make_latest: false" >> .goreleaser.yml
          fi

          # Add goreleaser config to gitignore so it doesnt complain about a dirty git state
          echo ".goreleaser.yml" >> .gitignore
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_SUFFIX: ${{ env.RELEASE_SUFFIX }}
